#include <Wire.h>
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x3F, 16, 2);

#include <SPI.h>
#include <MFRC522.h>

#define SS_PIN 10
#define RST_PIN 9

//Déclaration
MFRC522 rfid(SS_PIN, RST_PIN);

//Tabeau contenant l'ID
byte nuidPICC[4];

int LR = 3;
int LG = 2;
byte i = 0;

void setup() {

//LCD
lcd.init();
lcd.backlight();
lcd.display();
lcd.clear();
lcd.setCursor(0, 0);
lcd.print("Coded by Chopper");
delay(3000);
lcd.clear();
lcd.setCursor(0, 0);
lcd.print("********************");
lcd.setCursor(0, 1);
lcd.print("Porte :");
lcd.setCursor(0, 2);
lcd.print("ID :");



//RFID
Serial.begin(9600);
SPI.begin();
rfid.PCD_Init();

//LED
pinMode(LR, OUTPUT);
pinMode(LG, OUTPUT);


}

void loop() {

  digitalWrite(LR, HIGH);
    
  //Initialiser la boucle si aucun badge n'est présent
  if (!rfid.PICC_IsNewCardPresent())
  return;

 //Vérifier la présence d'un nouveau badge
 if (!rfid.PICC_ReadCardSerial())
  Serial.print(PICC_CardSerial())
  return;

 //Enregistrer l'ID du badge sur 4 octets
 for (i = 0; i < 4; i++)
 {
    nuidPICC[i] = rfid.uid.uidByte[i];
  }

  //Affichage de l'ID sur LCD
  if ( !rfid.PICC_ReadCardSerial())
  {
    lcd.setCursor(4,2);
    lcd.print("75 33 8 AB");
    digitalWrite(LR, LOW);
    digitalWrite(LG, HIGH);
    delay(2000);
    digitalWrite(LG, LOW);
    }
    
    //Re-Init RFID
    rfid.PICC_HaltA(); //Halt PICC
    rfid.PCD_StopCrypto1(); //Stop encryption on PCD

}
